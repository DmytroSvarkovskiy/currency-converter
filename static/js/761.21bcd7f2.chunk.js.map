{"version":3,"file":"static/js/761.21bcd7f2.chunk.js","mappings":"4NACaA,E,OAAeC,GAAAA,GAAS,8G,2BC+CrC,EAzC4B,WAC1B,OAA8BC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,YAAY,IAAhEC,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YACRC,EAAWC,OAAOC,KAAKJ,GAE7B,GAAqCK,EAAAA,EAAAA,UAASJ,GAAY,eAAnDK,EAAU,KAAEC,EAAc,KAC3BC,EAAeN,EAASO,WAAU,SAAAC,GAAE,OAAIA,IAAOJ,CAAU,IAK/D,OACE,8BACE,SAACK,EAAA,EAAS,WACR,UAAC,KAAM,YACL,SAAChB,EAAY,UAAC,mCACd,gBAAKiB,IAAKC,EAAAA,EAAqBL,GAAcF,GAAaQ,IAAI,SAAU,KACxE,mBAAQC,SATK,SAACC,GACpBT,EAAeS,EAAEC,OAAOC,MAC1B,EAOwCA,MAAOZ,EAAW,SAC/CJ,EAASiB,KAAI,SAAAT,GACZ,OACE,mBAAiBQ,MAAOR,EAAG,SACxBA,GADUA,EAIjB,OAEF,kBAAOU,KAAK,YACZ,kBAAOA,KAAK,WAAY,UAclC,C","sources":["conponents/pages/Converter/Converter.styled.tsx","conponents/pages/Converter/Converter.tsx"],"sourcesContent":["import styled from 'styled-components';\nexport const ConvertTitle = styled.h2`\n  text-align: center;\n  font-size: 35px;\n  color: #756059;\n  margin-bottom: 40px;\n`;\n","import { Container } from '../../Container/Container';\nimport { Casket } from '../Home/Home.styled';\nimport { useAppSelector } from '../../../hooks';\nimport { ConvertTitle } from './Converter.styled';\nimport { useState } from 'react';\nimport { currencyListWithFlag } from '../../../currencyList';\n\nconst Converter: React.FC = () => {\n  const { rate, currentRate } = useAppSelector(state => state.exchangeRate);\n  const currency = Object.keys(rate);\n  // const course = Object.values(rate);\n  const [forCurency, setForCurrency] = useState(currentRate);\n  const currentIndex = currency.findIndex(el => el === forCurency);\n\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n    setForCurrency(e.target.value);\n  };\n  return (\n    <section>\n      <Container>\n        <Casket>\n          <ConvertTitle>Convert the required currency</ConvertTitle>\n          <img src={currencyListWithFlag[currentIndex][forCurency]} alt=\"flag\" />{' '}\n          <select onChange={handleChange} value={forCurency}>\n            {currency.map(el => {\n              return (\n                <option key={el} value={el}>\n                  {el}\n                </option>\n              );\n            })}\n          </select>\n          <input type=\"number\" />\n          <input type=\"number\" />{' '}\n          {/* <select value={currentRate}>\n            {currency.map(el => {\n              return (\n                <option key={el} value={el}>\n                  {el}\n                </option>\n              );\n            })}\n          </select> */}\n        </Casket>\n      </Container>\n    </section>\n  );\n};\nexport default Converter;\n"],"names":["ConvertTitle","styled","useAppSelector","state","exchangeRate","rate","currentRate","currency","Object","keys","useState","forCurency","setForCurrency","currentIndex","findIndex","el","Container","src","currencyListWithFlag","alt","onChange","e","target","value","map","type"],"sourceRoot":""}
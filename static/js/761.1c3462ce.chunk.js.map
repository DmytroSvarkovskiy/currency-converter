{"version":3,"file":"static/js/761.1c3462ce.chunk.js","mappings":"4NACaA,E,OAAeC,GAAAA,GAAS,8G,2BCqDrC,EA/C4B,WAC1B,OAA8BC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,YAAY,IAAhEC,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YACRC,EAAWC,OAAOC,KAAKJ,GAE7B,GAAqCK,EAAAA,EAAAA,UAASJ,GAAY,eAAnDK,EAAU,KAAEC,EAAc,KACjC,GAAmCF,EAAAA,EAAAA,UAASJ,GAAY,eAAjDO,EAAS,KAAEC,EAAa,KACzBC,EAAkBR,EAASS,WAAU,SAAAC,GAAE,OAAIA,IAAON,CAAU,IAC5DO,EAAiBX,EAASS,WAAU,SAAAC,GAAE,OAAIA,IAAOJ,CAAS,IAQhE,OACE,8BACE,SAACM,EAAA,EAAS,WACR,UAAC,KAAM,YACL,SAACnB,EAAY,UAAC,mCACd,gBAAKoB,IAAKC,EAAAA,EAAqBN,GAAiBJ,GAAaW,IAAI,SAAU,KAC3E,mBAAQC,SAZK,SAACC,GACpBZ,EAAeY,EAAEC,OAAOC,MAC1B,EAUwCA,MAAOf,EAAW,SAC/CJ,EAASoB,KAAI,SAAAV,GACZ,OACE,mBAAiBS,MAAOT,EAAG,SACxBA,GADUA,EAIjB,OAEF,kBAAOW,KAAK,YACZ,kBAAOA,KAAK,WAAY,KACxB,mBAAQL,SApBO,SAACC,GACtBV,EAAcU,EAAEC,OAAOC,MACzB,EAkB0CA,MAAOb,EAAU,SAChDN,EAASoB,KAAI,SAAAV,GACZ,OACE,mBAAiBS,MAAOT,EAAG,SACxBA,GADUA,EAIjB,OAEF,gBAAKG,IAAKC,EAAAA,EAAqBH,GAAgBL,GAAYS,IAAI,SAAU,UAKnF,C","sources":["conponents/pages/Converter/Converter.styled.tsx","conponents/pages/Converter/Converter.tsx"],"sourcesContent":["import styled from 'styled-components';\nexport const ConvertTitle = styled.h2`\n  text-align: center;\n  font-size: 35px;\n  color: #756059;\n  margin-bottom: 40px;\n`;\n","import { Container } from '../../Container/Container';\nimport { Casket } from '../Home/Home.styled';\nimport { useAppSelector } from '../../../hooks';\nimport { ConvertTitle } from './Converter.styled';\nimport { useState } from 'react';\nimport { currencyListWithFlag } from '../../../currencyList';\n\nconst Converter: React.FC = () => {\n  const { rate, currentRate } = useAppSelector(state => state.exchangeRate);\n  const currency = Object.keys(rate);\n  // const course = Object.values(rate);\n  const [forCurency, setForCurrency] = useState(currentRate);\n  const [toCurency, setToCurrency] = useState(currentRate);\n  const currentIndexFor = currency.findIndex(el => el === forCurency);\n  const currentIndexTo = currency.findIndex(el => el === toCurency);\n\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n    setForCurrency(e.target.value);\n  };\n  const handleToChange = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n    setToCurrency(e.target.value);\n  };\n  return (\n    <section>\n      <Container>\n        <Casket>\n          <ConvertTitle>Convert the required currency</ConvertTitle>\n          <img src={currencyListWithFlag[currentIndexFor][forCurency]} alt=\"flag\" />{' '}\n          <select onChange={handleChange} value={forCurency}>\n            {currency.map(el => {\n              return (\n                <option key={el} value={el}>\n                  {el}\n                </option>\n              );\n            })}\n          </select>\n          <input type=\"number\" />\n          <input type=\"number\" />{' '}\n          <select onChange={handleToChange} value={toCurency}>\n            {currency.map(el => {\n              return (\n                <option key={el} value={el}>\n                  {el}\n                </option>\n              );\n            })}\n          </select>\n          <img src={currencyListWithFlag[currentIndexTo][toCurency]} alt=\"flag\" />{' '}\n        </Casket>\n      </Container>\n    </section>\n  );\n};\nexport default Converter;\n"],"names":["ConvertTitle","styled","useAppSelector","state","exchangeRate","rate","currentRate","currency","Object","keys","useState","forCurency","setForCurrency","toCurency","setToCurrency","currentIndexFor","findIndex","el","currentIndexTo","Container","src","currencyListWithFlag","alt","onChange","e","target","value","map","type"],"sourceRoot":""}